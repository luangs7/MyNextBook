name: Build, Test and Deploy App

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set flavor based on branch name
        run: |
            case ${{ github.ref }} in
              refs/heads/master)
                FLAVOR="ProdRelease"
                ;;
              refs/heads/feature/*)
                FLAVOR="DevRelease"
                ;;
              *)
                FLAVOR="MockRelease"
                ;;
            esac
            echo "Flavor: $FLAVOR"

      - name: Get google-services.json from
        run: echo -n "${ secrets.GOOGLE_SERVICES_JSON }"

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
            gradle-version: 6.10

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Lint
        run: ./gradlew lint${{ env.FLAVOR }}
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Upload Build Lint Report
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: app/build/reports/lint-results-debug.html

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Unit Tests
        run: ./gradlew test${{ env.FLAVOR }}

      - name: Upload Unit Test Report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: app/build/reports/tests/testDebugUnitTest/

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Firebase Token
        uses: supercharge/firebase-action@v1.10.0
        with:
          args: "use --token '$(cat firebase-token.json)'"

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build Release APK
        run: ./gradlew assemble${{ env.FLAVOR }}

      - name: Upload APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          releaseNotesFile: app/src/main/play/release-notes/en-US/default.txt
          groups: internal-testers
          apkPath: app/build/outputs/apk/release/app-release.apk
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
